/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package study.netbeans.controls;

import java.awt.event.KeyEvent;
import java.util.Arrays;
import java.util.logging.Level;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.TransferHandler;
import study.netbeans.common.logger.LoggerManager;
import study.netbeans.util.ListDragAndDropMoveHandler;
import study.netbeans.util.ListDragAndDropSwapHandler;

/**
 *
 * @author P088454
 */
public class ListDragAndDrop extends javax.swing.JFrame {
    
    private LoggerManager loggerMgr;
    
    private DefaultListModel<String> list1Model = new DefaultListModel<>();
    private DefaultListModel<String> list2Model = new DefaultListModel<>();
    private DefaultListModel<String> list3Model = new DefaultListModel<>();
    private DefaultListModel<String> list4Model = new DefaultListModel<>();
    private DefaultListModel<String> list5Model = new DefaultListModel<>();
    private DefaultListModel<String> list6Model = new DefaultListModel<>();
    
    private DefaultListModel<String> mainlistModel = new DefaultListModel<>();

    /**
     * Creates new form DraAndDrop
     */
    public ListDragAndDrop() {
        initLoggerManager();
        initComponents();
        
        list1.setModel(list1Model);
        list2.setModel(list2Model);
        list3.setModel(list3Model);
        list4.setModel(list4Model);
        list5.setModel(list5Model);
        list6.setModel(list6Model);
        mainList.setModel(mainlistModel);
        
//        list1.setTransferHandler(new ListDragAndDropMoveHandler(loggerMgr, "12"));
//        list2.setTransferHandler(new ListDragAndDropMoveHandler(loggerMgr, "12"));
//        list3.setTransferHandler(new ListDragAndDropMoveHandler(loggerMgr, "all"));
//        list4.setTransferHandler(new ListDragAndDropMoveHandler(loggerMgr, "45"));
//        list5.setTransferHandler(new ListDragAndDropMoveHandler(loggerMgr, "45"));
//        list6.setTransferHandler(new ListDragAndDropMoveHandler(loggerMgr, "all"));
        mainList.setTransferHandler(new ListDragAndDropMoveHandler(loggerMgr, "main"));
        
//        mainlistModel.addElement("slot_0");
//        mainlistModel.addElement("slot_1");
//        mainlistModel.addElement("");
//        mainlistModel.addElement("slot_3");
//        mainlistModel.addElement("slot_4");
//        mainlistModel.addElement("slot_5");
//        mainlistModel.addElement("slot_6");
//        mainlistModel.addElement("slot_7");
//        mainlistModel.addElement("slot_8");
//        mainlistModel.addElement("slot_9");        


        // 리스트 group랑 양방향, 단방향 테스트
        
        list1.setTransferHandler(new ListDragAndDropSwapHandler(loggerMgr, "1"));
        list2.setTransferHandler(new ListDragAndDropSwapHandler(loggerMgr, "2"));
        list4.setTransferHandler(new ListDragAndDropSwapHandler(loggerMgr, "4"));
        list5.setTransferHandler(new ListDragAndDropSwapHandler(loggerMgr, "5"));
        
        ListDragAndDropSwapHandler.allowPair("1", "2", false);  // 1 <-> 2 (양방향)
        ListDragAndDropSwapHandler.allowPair("2", "5", true); // 4 <-> 5 (양방향)        
        ListDragAndDropSwapHandler.allowPair("1", "5", false);  // 1 -> 2 (단방향)
//        ListDragAndDropMoveHandler.allowPair("4", "5", false); // 4 -> 5 (단방향)
        
//        ListDragAndDropMoveHandler.allowPair("1", "2", ListDragAndDropMoveHandler.Mode.MOVE, false);
//        ListDragAndDropMoveHandler.allowPair("2", "1", ListDragAndDropMoveHandler.Mode.SWAP, false);

        
        list1Model.addElement("list1_0");
        list1Model.addElement("list1_1");
        list1Model.addElement("list1_2");
        list1Model.addElement("list1_3");
        
        list2Model.addElement("list2_0");
        list2Model.addElement("list2_1");
        
        list4Model.addElement("list4_0");
        list4Model.addElement("list4_1");
        list4Model.addElement("list4_2");
        list4Model.addElement("list4_3");
        
        list5Model.addElement("list5_0");
        list5Model.addElement("list5_1");
        
        
        
        
        
        
    }

    private void initLoggerManager() {
        loggerMgr = new LoggerManager(this.getClass().getName(), Level.INFO);
        loggerMgr.getLogger().info("===> initLoggerManager()");  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        list4 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        list2 = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        list3 = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        list5 = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        list6 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        mainList = new javax.swing.JList<>();
        textField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("아이콘테스트");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/study/resource/icon/bookmark.png")).getImage());

        list1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list1.setDragEnabled(true);
        list1.setDropMode(javax.swing.DropMode.ON);
        list1.setPrototypeCellValue("width");
        list1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list1MouseClicked(evt);
            }
        });
        list1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                list1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(list1);

        list4.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list4.setDragEnabled(true);
        list4.setDropMode(javax.swing.DropMode.ON);
        list4.setPrototypeCellValue("width");
        jScrollPane2.setViewportView(list4);

        list2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list2.setDragEnabled(true);
        list2.setDropMode(javax.swing.DropMode.ON);
        list2.setPrototypeCellValue("width");
        jScrollPane3.setViewportView(list2);

        list3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list3.setDragEnabled(true);
        list3.setDropMode(javax.swing.DropMode.INSERT);
        list3.setPrototypeCellValue("width");
        jScrollPane4.setViewportView(list3);

        list5.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list5.setDragEnabled(true);
        list5.setDropMode(javax.swing.DropMode.ON);
        list5.setPrototypeCellValue("width");
        jScrollPane5.setViewportView(list5);

        list6.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list6.setDragEnabled(true);
        list6.setDropMode(javax.swing.DropMode.INSERT);
        list6.setPrototypeCellValue("width");
        jScrollPane6.setViewportView(list6);

        mainList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        mainList.setDragEnabled(true);
        mainList.setDropMode(javax.swing.DropMode.INSERT);
        mainList.setPrototypeCellValue("width");
        jScrollPane7.setViewportView(mainList);

        textField.setText("0");
        textField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldFocusLost(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/study/resource/icon/bookmark.png"))); // NOI18N
        jButton1.setText("jButton1");

        jButton2.setText("jButton1");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 311, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void list1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_list1KeyPressed
        int[] index;
        int result;
        //int count;

        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            index = list1.getSelectedIndices();
            Arrays.sort(index);

            if (index.length > 0) {
//                for (int i = index.length - 1; i >= 0; i -= 1) {
//                    //loggerMgr.getLogger().info("index = " + i);  
//                    selectData = listModel.getElementAt(index[i]);
//                    sub1Frame.getListModel().addElement(selectData);
//                    listModel.remove(index[i]);
//                }

                result = JOptionPane.showConfirmDialog(
                        this,
                        "선택한 항목을 삭제하시겠습니까?",
                        "삭제",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE
                );

                if (result == JOptionPane.YES_OPTION) {
                    //list1Model.remove(selectedIndex);

                    for (int i = index.length - 1; i >= 0; i -= 1) {
                        //loggerMgr.getLogger().info("index = " + i);  
                        list1Model.remove(index[i]);
                    }
                }
            }
        }
    }//GEN-LAST:event_list1KeyPressed

    private void list1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list1MouseClicked
        if (evt.getClickCount() == 2) { // 더블클릭 감지
            int selectedIndex = list1.getSelectedIndex();
            if (selectedIndex != -1) {
                String currentValue = list1Model.getElementAt(selectedIndex);

                // 입력 다이얼로그 표시
                String newValue = JOptionPane.showInputDialog(
                        this,
                        "수정할 내용을 입력하세요.",
                        currentValue
                );

                // 취소했거나 빈 문자열이면 변경하지 않음
                if (newValue != null) {
                    newValue = newValue.trim(); // 공백 제거
                    if (newValue.length() > 0) {
                        list1Model.setElementAt(newValue, selectedIndex);
                    } else {
                        JOptionPane.showMessageDialog(
                                this,
                                "빈 값으로 변경할 수 없습니다.",
                                "알림",
                                JOptionPane.WARNING_MESSAGE
                        );
                    }
                } /*else {
                    JOptionPane.showMessageDialog(
                            this,
                            "빈 값으로 변경할 수 없습니다.",
                            "알림",
                            JOptionPane.WARNING_MESSAGE
                    );
                }*/
            }
        }
    }//GEN-LAST:event_list1MouseClicked

    private void textFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldFocusLost
        String text = textField.getText();
        try {
            float num = Float.parseFloat(text);
            textField.setText(Float.toString(num));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    this,
                    "숫자만 입력할 수 있습니다.",
                    "알림",
                    JOptionPane.WARNING_MESSAGE
            );
            
            textField.setText("0");
        }
        
    }//GEN-LAST:event_textFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
//            logger.log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ListDragAndDrop().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JList<String> list1;
    private javax.swing.JList<String> list2;
    private javax.swing.JList<String> list3;
    private javax.swing.JList<String> list4;
    private javax.swing.JList<String> list5;
    private javax.swing.JList<String> list6;
    private javax.swing.JList<String> mainList;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
}
